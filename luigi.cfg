[core]

no_lock = True

[worker]

keep_alive = False
ping_interval = 20
wait_interval = 20
max_reschedules = 0

[DEFAULT]

# name of your analysis
name = ZJtest

# NNLOJET process
process = ZJ

# NNLOJET channels (append "a", "b" for RR region flag)
channels = LO R V RRa RRb RV VV

# merged grids (make sure it's compatible with your combine.ini config)
final_tables = {
    "NLO": ["LO", "R", "V"],
    "NLO_only": ["R", "V"],
    "NNLO_only": ["RRa", "RRb", "RV", "VV"],
    "NNLO": ["LO", "R", "V", "RRa", "RRb", "RV", "VV"]
  }

# list of all observables
observables = [
    "ZJtriple_yb0_ystar0_ptz",
    "ZJtriple_yb0_ystar1_ptz"
  ]

# dcache path, output will be created inside $wlcg_path/$name
wlcg_path = srm://cmssrm-kit.gridka.de:8443/srm/managerv2?SFN=/pnfs/gridka.de/cms/disk-only/store/user/msantosc

# htcondor job config
htcondor_accounting_group = cms.jet
htcondor_requirements = (TARGET.ProvidesCPU==true)
htcondor_remote_job = True
htcondor_user_proxy = /tmp/x509up_u12225
htcondor_walltime = 600
htcondor_request_cpus = 1
htcondor_request_memory = 2048
htcondor_universe = docker
htcondor_docker_image = mschnepf/slc6-condocker

# create log files in htcondor jobs
transfer_logs = True

# set local scheduler
local_scheduler = True

# set tolerance for workflow success with failed branches
tolerance = 0

# submit only missing htcondor workflow branches (should always be true)
only_missing = True

# bootstrap file to be sourced at beginning of htcondor jobs
bootstrap_file = bootstrap.sh

# directory for merging of grids inside $merge_dir/$name
merge_dir = mergedgrids

# fastNLO cppread
pdf = CT14nnlo
scalecombs = -6
ascode = LHAPDF
norm = no
scale = scale12

# directory for plots
plots_dir = plots

[BaseRuncard]

# path to base runcard file
source_path = ZJ.ZJtriple.run

[Steeringfiles]

# directory with all steering files
source_path = steeringfiles

[Runcard]

[Warmup]

# override default htcondor config
htcondor_requirements = (TARGET.ProvidesEkpResources==true)
htcondor_request_cpus = 2
bootstrap_file = multicore_bootstrap.sh
htcondor_request_memory = 4096

# NNLOJET event count and integration steps for every channel (must be same length as channels)
warmup_events = 20000 1000 2000 30 30 30 30
warmup_iterations = 10 10 10 10 10 10 10

# first seed for first branch, counting upwards
starting_seed = 0

[FastWarm]

# override tolerance to 5% failed jobs
tolerance = 0.05

# NNLOJET event count and number of jobs for each channel
fastwarm_events = 200000 200000 200000 100000 100000 100000 100000
fastwarm_jobs = 3 3 3 3 3 3 3
starting_seeds = 1000 2000 3000 4000 5000 6000 7000

[MergeFastWarm]

[FastProd]

# NNLOJET event count and number of jobs for each channel
fastprod_events = 150000 20000 20000 1000 1000 1000 1000
fastprod_jobs = 3 3 3 3 3 3 3
starting_seeds = 10000 20000 30000 40000 50000 60000 70000

[CopyTables]

[Combine]

# path to combine.ini config
combine_ini = /storage/9/mcorrea/nnlo-law-analysis/combine.ini

# number of cores for NNLOJET combine script
cores = 5

[MergeFastProd]

htcondor_requirements = (TARGET.ProvidesEkpResources==true)

# execute workflow as local workflow instead of htcondor workflow (useful for merging small amount of grids, to be removed later)
workflow = local

[MergeFinal]

[FnloCppread]

[FnloCppreadFinal]

[SingleScalecheck]

[Approxtest]

fscl = 7

[Absolute]

[AbsoluteAll]

